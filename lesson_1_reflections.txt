How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    By showing what happened until the bug has been discover

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Easy access to the entire history means easy move from a version to another. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually choosing when to commit give flexibility to create more logical and clear commit. Do it
	automatically will probably fill commit log with lots of unclear and not logical commit, which make difficult
	to use the version control system to be more effective programmer.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Unlike Git, version control systems like Google Docs do treat each file separately because the don't have the concept of project. For them each file is logically independant. For Git files can be related so it allow saving multiple files in a commit

How can you use the commands git log and git diff to view the history of files?

    I use git log to see all commit with their id, modified files by adding --stat argument. git diff help me to see differences between files and between commits. 

How might using version control make you more confident to make changes that
could break something?

    By allowing me to revert to a previous state

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use git in all my projects
